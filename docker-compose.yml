version: '3'

services:
  discovery-server:
    build: ./eureka
    ports:
      - "8761:8761"
    restart: always
    networks:
      - app-network
    environment:
      - EUREKA_SERVER=http://discovery-server:8761/eureka/

 
  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    ports:
      - "8099:8099"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    depends_on:
      - discovery-server
    networks:
      - app-network    

  mysqldb:
    image: mysql:latest
    restart: unless-stopped
    container_name: mysqldb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: inscription
    ports:
      - "3306:3306"
    networks:
      - app-network   # Changed to consistent network name
    volumes:
      - mysql-data:/var/lib/mysql

  # Spring Boot service
  springboot-app:
    image: wassimmanai/app:latest
    restart: on-failure
    ports:
      - "8086:8086"
    depends_on:
      - discovery-server
      - mysqldb
    networks:
      - app-network   # Changed to consistent network name
    environment:
      SPRING_APPLICATION_JSON: '{
            "spring.datasource.url" : "jdbc:mysql://mysqldb:3306/inscription?createDatabaseIfNotExist=true",
            "spring.datasource.username" : "root",
            "spring.datasource.password" : "root",
            "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQLDialect",
            "spring.jpa.hibernate.ddl-auto" : "update",
            "eureka.client.serviceUrl.defaultZone": "http://discovery-server:8761/eureka"
          }'
      stdin_open: true
      tty: true
  
  
   
  microservice-forum:
    restart: on-failure
    container_name: microservice-forum
    build: ./microservice-forum
    ports:
      - "8094:8094"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    networks:
      - app-network
    depends_on:
      - discovery-server
    volumes:
      - forum-db-data:/app/Database/Data
    

  events:
    restart: on-failure
    container_name: eventss
    build: ./EvenementProject
    ports:
      - "8083:8083"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    networks:
      - app-network
    depends_on:
      - discovery-server
    volumes:
      - evenement-db-data:/app/Database/Data

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.0.5
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8080:8080"
    command:
      - "start-dev"
      - "--http-port=8080"
    networks:
      - app-network
    volumes:
      - keycloak_data:/opt/keycloak/data


  postgresql:
    container_name: postgresql
    image: postgres
    environment:
      POSTGRES_USER: houssemino
      POSTGRES_PASSWORD: houssemino
      POSTGRES_DB: product_db
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped


  python-microservice:
    build: ./news
    volumes:
      - ./news:/usr/src/app
    ports:
      - "5001:5001"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8671/eureka/
      - POSTGRES_USER=houssemino
      - POSTGRES_PASSWORD=houssemino
      - POSTGRES_DB=product_db
      - POSTGRES_HOST=postgresql
      - POSTGRES_PORT=5432
    networks:
      - app-network
    depends_on:
      - postgresql


networks:
  app-network:    # Consistent network name used here

volumes:
  mysql-data:
  evenement-db-data:  # Added missing volume
    driver: local
  quiz-db-data: 
    driver: local
  inscription-db-data: 
    driver: local
  forum-db-data:
    driver: local
  keycloak_data:
    driver: local
  postgres:
    driver: local 
    
